{"version":3,"sources":["components/collection-preview/collection-preview.styles.jsx","components/collection-preview/collection-preview.component.jsx","components/collections-overview/collections-overview.styles.jsx","components/collections-overview/collections-overview.component.jsx","components/collections-overview/collections-overview.container.jsx","redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx"],"names":["CollectionPreviewContainer","styled","div","TitleContainer","h1","displayName","PreviewContainer","withRouter","title","items","history","match","routeName","onClick","push","path","toUpperCase","filter","item","idx","map","id","CollectionsOverviewContainer","mapStateToProps","createStructuredSelector","collections","selectCollectionsForPreview","connect","otherCollectionProps","isLoading","selectIsCollectionFetching","compose","WithSpinner","CollectionsOverview","selectShop","state","shop","selectCollections","createSelector","Object","keys","key","selectCollection","collectionUrlParam","isFetching","selectIsCollectionsLoaded","WrappedComponent","otherProps","CollectionItemContainer","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","dispatch","addItem","name","price","className","inverted"],"mappings":"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","file":"static/js/4.0b94a411.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const CollectionPreviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n\n  @media screen and (max-width: 800px) {\n    align-items: center;\n  }\n`;\n\nexport const TitleContainer = styled.h1`\n  font-size: 28px;\n  margin-bottom: 25px;\n  cursor: pointer;\n\n  &:hover {\n    color: grey;\n  }\n`;\n\nTitleContainer.displayName = 'TitleContainer';\n\nexport const PreviewContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 800px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 15px;\n  }\n`;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport CollectionItem from '../collection-item/collection-item.component';\n\nimport {\n  CollectionPreviewContainer,\n  TitleContainer,\n  PreviewContainer\n} from './collection-preview.styles';\n\nexport const CollectionPreview = ({\n  title,\n  items,\n  history,\n  match,\n  routeName\n}) => (\n  <CollectionPreviewContainer>\n    <TitleContainer onClick={() => history.push(`${match.path}/${routeName}`)}>\n      {title.toUpperCase()}\n    </TitleContainer>\n    <PreviewContainer>\n      {items\n        .filter((item, idx) => idx < 4)\n        .map(item => (\n          <CollectionItem key={item.id} item={item} />\n        ))}\n    </PreviewContainer>\n  </CollectionPreviewContainer>\n);\n\nexport default withRouter(CollectionPreview);\n","import styled from 'styled-components';\n\nexport const CollectionsOverviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport CollectionPreview from '../collection-preview/collection-preview.component';\n\nimport { selectCollectionsForPreview } from '../../redux/shop/shop.selectors';\nimport { CollectionsOverviewContainer } from './collections-overview.styles';\n\nexport const CollectionsOverview = ({ collections }) => (\n  <CollectionsOverviewContainer>\n    {collections.map(({ id, ...otherCollectionProps }) => (\n      <CollectionPreview key={id} {...otherCollectionProps} />\n    ))}\n  </CollectionsOverviewContainer>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectCollectionsForPreview\n});\n\nexport default connect(mapStateToProps)(CollectionsOverview);\n","import { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { compose } from 'redux';\n\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../with-spinner/with-spinner.component';\nimport CollectionsOverview from './collections-overview.component';\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectIsCollectionFetching\n});\n\nconst CollectionsOverviewContainer = compose(\n  connect(mapStateToProps),\n  WithSpinner\n)(CollectionsOverview);\n\nexport default CollectionsOverviewContainer;\n","import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  shop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  collections =>\n    collections ? Object.keys(collections).map(key => collections[key]) : []\n);\n\nexport const selectCollection = collectionUrlParam =>\n  createSelector(\n    [selectCollections],\n    collections => (collections ? collections[collectionUrlParam] : null)\n  );\n\nexport const selectIsCollectionFetching = createSelector(\n  [selectShop],\n  shop => shop.isFetching\n);\n\nexport const selectIsCollectionsLoaded = createSelector(\n  [selectShop],\n  shop => !!shop.collections\n);\n","import React from 'react';\n\nimport Spinner from '../spinner/spinner.component';\n\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\n};\n\nexport default WithSpinner;\n","import styled from 'styled-components';\nimport CustomButton from '../custom-button/custom-button.component';\n\nexport const CollectionItemContainer = styled.div`\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n\n  &:hover {\n    .image {\n      opacity: 0.8;\n    }\n\n    button {\n      opacity: 0.85;\n      display: flex;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 40vw;\n\n    &:hover {\n      .image {\n        opacity: unset;\n      }\n\n      button {\n        opacity: unset;\n      }\n    }\n  }\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 80%;\n  opacity: 0.7;\n  position: absolute;\n  top: 255px;\n  display: none;\n\n  @media screen and (max-width: 800px) {\n    display: block;\n    opacity: 0.9;\n    min-width: unset;\n    padding: 0 10px;\n  }\n`;\n\nAddButton.displayName = 'AddButton';\n\nexport const BackgroundImage = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nBackgroundImage.displayName = 'BackgroundImage';\n\nexport const CollectionFooterContainer = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nCollectionFooterContainer.displayName = 'CollectionFooterContainer';\n\nexport const NameContainer = styled.span`\n  width: 90%;\n  margin-bottom: 15px;\n`;\n\nNameContainer.displayName = 'NameContainer';\n\nexport const PriceContainer = styled.span`\n  width: 10%;\n  text-align: right;\n`;\n\nPriceContainer.displayName = 'PriceContainer';\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { addItem } from '../../redux/cart/cart.actions';\n\nimport {\n  CollectionItemContainer,\n  CollectionFooterContainer,\n  AddButton,\n  BackgroundImage,\n  NameContainer,\n  PriceContainer\n} from './collection-item.styles';\n\nexport const CollectionItem = ({ item, addItem }) => {\n  const { name, price, imageUrl } = item;\n\n  return (\n    <CollectionItemContainer>\n      <BackgroundImage className='image' imageUrl={imageUrl} />\n      <CollectionFooterContainer>\n        <NameContainer>{name}</NameContainer>\n        <PriceContainer>{price}</PriceContainer>\n      </CollectionFooterContainer>\n      <AddButton onClick={() => addItem(item)} inverted>\n        Add to cart\n      </AddButton>\n    </CollectionItemContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CollectionItem);\n"],"sourceRoot":""}