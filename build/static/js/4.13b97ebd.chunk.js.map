{"version":3,"sources":["components/collection-preview/collection-preview.styles.jsx","components/collection-preview/collection-preview.component.jsx","components/collections-overview/collections-overview.styles.jsx","components/collections-overview/collections-overview.component.jsx","components/collections-overview/collections-overview.container.jsx","redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx"],"names":["CollectionPreviewContainer","styled","div","TitleContainer","h1","displayName","PreviewContainer","withRouter","title","items","history","match","routeName","onClick","push","path","toUpperCase","filter","item","idx","map","id","CollectionsOverviewContainer","mapStateToProps","createStructuredSelector","collections","selectCollectionsForPreview","connect","otherCollectionProps","isLoading","selectIsCollectionFetching","compose","WithSpinner","CollectionsOverview","selectShop","state","shop","selectCollections","createSelector","Object","keys","key","selectCollection","collectionUrlParam","isFetching","selectIsCollectionsLoaded","WrappedComponent","otherProps","CollectionItemContainer","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","dispatch","addItem","name","price","className","inverted"],"mappings":"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","file":"static/js/4.13b97ebd.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CollectionPreviewContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 30px;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const TitleContainer = styled.h1`\r\n  font-size: 28px;\r\n  margin-bottom: 25px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: grey;\r\n  }\r\n`;\r\n\r\nTitleContainer.displayName = 'TitleContainer';\r\n\r\nexport const PreviewContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 15px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport CollectionItem from '../collection-item/collection-item.component';\r\n\r\nimport {\r\n  CollectionPreviewContainer,\r\n  TitleContainer,\r\n  PreviewContainer\r\n} from './collection-preview.styles';\r\n\r\nexport const CollectionPreview = ({\r\n  title,\r\n  items,\r\n  history,\r\n  match,\r\n  routeName\r\n}) => (\r\n  <CollectionPreviewContainer>\r\n    <TitleContainer onClick={() => history.push(`${match.path}/${routeName}`)}>\r\n      {title.toUpperCase()}\r\n    </TitleContainer>\r\n    <PreviewContainer>\r\n      {items\r\n        .filter((item, idx) => idx < 4)\r\n        .map(item => (\r\n          <CollectionItem key={item.id} item={item} />\r\n        ))}\r\n    </PreviewContainer>\r\n  </CollectionPreviewContainer>\r\n);\r\n\r\nexport default withRouter(CollectionPreview);\r\n","import styled from 'styled-components';\r\n\r\nexport const CollectionsOverviewContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport CollectionPreview from '../collection-preview/collection-preview.component';\r\n\r\nimport { selectCollectionsForPreview } from '../../redux/shop/shop.selectors';\r\nimport { CollectionsOverviewContainer } from './collections-overview.styles';\r\n\r\nexport const CollectionsOverview = ({ collections }) => (\r\n  <CollectionsOverviewContainer>\r\n    {collections.map(({ id, ...otherCollectionProps }) => (\r\n      <CollectionPreview key={id} {...otherCollectionProps} />\r\n    ))}\r\n  </CollectionsOverviewContainer>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  collections: selectCollectionsForPreview\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionsOverview);\r\n","import { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from 'redux';\r\n\r\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\r\nimport WithSpinner from '../with-spinner/with-spinner.component';\r\nimport CollectionsOverview from './collections-overview.component';\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoading: selectIsCollectionFetching\r\n});\r\n\r\nconst CollectionsOverviewContainer = compose(\r\n  connect(mapStateToProps),\r\n  WithSpinner\r\n)(CollectionsOverview);\r\n\r\nexport default CollectionsOverviewContainer;\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n  [selectShop],\r\n  shop => shop.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n  [selectCollections],\r\n  collections =>\r\n    collections ? Object.keys(collections).map(key => collections[key]) : []\r\n);\r\n\r\nexport const selectCollection = collectionUrlParam =>\r\n  createSelector(\r\n    [selectCollections],\r\n    collections => (collections ? collections[collectionUrlParam] : null)\r\n  );\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n  [selectShop],\r\n  shop => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n  [selectShop],\r\n  shop => !!shop.collections\r\n);\r\n","import React from 'react';\r\n\r\nimport Spinner from '../spinner/spinner.component';\r\n\r\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\r\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\r\n};\r\n\r\nexport default WithSpinner;\r\n","import styled from 'styled-components';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n  width: 22vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 350px;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    .image {\r\n      opacity: 0.8;\r\n    }\r\n\r\n    button {\r\n      opacity: 0.85;\r\n      display: flex;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 40vw;\r\n\r\n    &:hover {\r\n      .image {\r\n        opacity: unset;\r\n      }\r\n\r\n      button {\r\n        opacity: unset;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const AddButton = styled(CustomButton)`\r\n  width: 80%;\r\n  opacity: 0.7;\r\n  position: absolute;\r\n  top: 255px;\r\n  display: none;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    display: block;\r\n    opacity: 0.9;\r\n    min-width: unset;\r\n    padding: 0 10px;\r\n  }\r\n`;\r\n\r\nAddButton.displayName = 'AddButton';\r\n\r\nexport const BackgroundImage = styled.div`\r\n  width: 100%;\r\n  height: 95%;\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin-bottom: 5px;\r\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\r\n`;\r\n\r\nBackgroundImage.displayName = 'BackgroundImage';\r\n\r\nexport const CollectionFooterContainer = styled.div`\r\n  width: 100%;\r\n  height: 5%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 18px;\r\n`;\r\n\r\nCollectionFooterContainer.displayName = 'CollectionFooterContainer';\r\n\r\nexport const NameContainer = styled.span`\r\n  width: 90%;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nNameContainer.displayName = 'NameContainer';\r\n\r\nexport const PriceContainer = styled.span`\r\n  width: 10%;\r\n  text-align: right;\r\n`;\r\n\r\nPriceContainer.displayName = 'PriceContainer';\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addItem } from '../../redux/cart/cart.actions';\r\n\r\nimport {\r\n  CollectionItemContainer,\r\n  CollectionFooterContainer,\r\n  AddButton,\r\n  BackgroundImage,\r\n  NameContainer,\r\n  PriceContainer\r\n} from './collection-item.styles';\r\n\r\nexport const CollectionItem = ({ item, addItem }) => {\r\n  const { name, price, imageUrl } = item;\r\n\r\n  return (\r\n    <CollectionItemContainer>\r\n      <BackgroundImage className='image' imageUrl={imageUrl} />\r\n      <CollectionFooterContainer>\r\n        <NameContainer>{name}</NameContainer>\r\n        <PriceContainer>{price}</PriceContainer>\r\n      </CollectionFooterContainer>\r\n      <AddButton onClick={() => addItem(item)} inverted>\r\n        Add to cart\r\n      </AddButton>\r\n    </CollectionItemContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addItem: item => dispatch(addItem(item))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(CollectionItem);\r\n"],"sourceRoot":""}