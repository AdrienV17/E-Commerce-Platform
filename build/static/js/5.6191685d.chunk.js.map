{"version":3,"sources":["pages/collection/collection.styles.jsx","pages/collection/collection.component.jsx","pages/collection/collection.container.jsx","redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx"],"names":["CollectionPageContainer","styled","div","CollectionTitle","h2","CollectionItemsContainer","displayName","connect","state","ownProps","collection","selectCollection","match","params","collectionId","title","items","map","item","id","mapStateToProps","createStructuredSelector","isLoading","selectIsCollectionsLoaded","compose","WithSpinner","CollectionPage","selectShop","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","key","collectionUrlParam","selectIsCollectionFetching","isFetching","WrappedComponent","otherProps","CollectionItemContainer","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","dispatch","addItem","name","price","className","onClick","inverted"],"mappings":"0LAEaA,EAA0BC,IAAOC,IAAV,iGAMvBC,EAAkBF,IAAOG,GAAV,wEAKfC,EAA2BJ,IAAOC,IAAV,qQAerCG,EAAyBC,YAAc,2B,WCGxBC,eAJS,SAACC,EAAOC,GAAR,MAAsB,CAC5CC,WAAYC,YAAiBF,EAASG,MAAMC,OAAOC,aAAvCH,CAAqDH,MAGpDD,EAlBe,SAAC,GAAoB,IAAlBG,EAAiB,EAAjBA,WACvBK,EAAiBL,EAAjBK,MAAOC,EAAUN,EAAVM,MACf,OACE,eAAChB,EAAD,WACE,cAACG,EAAD,UAAkBY,IAClB,cAACV,EAAD,UACGW,EAAMC,KAAI,SAAAC,GAAI,OACb,cAAC,IAAD,CAA8BA,KAAMA,GAAfA,EAAKC,eCZ9BC,EAAkBC,YAAyB,CAC/CC,UAAW,SAAAd,GAAK,OAAKe,YAA0Bf,MAG3CR,EAA0BwB,YAC9BjB,YAAQa,GACRK,IAF8BD,CAG9BE,GAEa1B,a,gCCjBf,oJAEM2B,EAAa,SAAAnB,GAAK,OAAIA,EAAMoB,MAErBC,EAAoBC,YAC/B,CAACH,IACD,SAAAC,GAAI,OAAIA,EAAKG,eAGFC,EAA8BF,YACzC,CAACD,IACD,SAAAE,GAAW,OACTA,EAAcE,OAAOC,KAAKH,GAAad,KAAI,SAAAkB,GAAG,OAAIJ,EAAYI,MAAQ,MAG7DxB,EAAmB,SAAAyB,GAAkB,OAChDN,YACE,CAACD,IACD,SAAAE,GAAW,OAAKA,EAAcA,EAAYK,GAAsB,SAGvDC,EAA6BP,YACxC,CAACH,IACD,SAAAC,GAAI,OAAIA,EAAKU,cAGFf,EAA4BO,YACvC,CAACH,IACD,SAAAC,GAAI,QAAMA,EAAKG,gB,yECpBFN,IAJK,SAAAc,GAAgB,OAAI,YAAmC,IAAhCjB,EAA+B,EAA/BA,UAAckB,EAAiB,6BACxE,OAAOlB,EAAY,cAAC,IAAD,IAAc,cAACiB,EAAD,eAAsBC,O,6FCF5CC,EAA0BxC,IAAOC,IAAV,4dAkCvBwC,EAAYzC,YAAO0C,IAAP1C,CAAH,0PAetByC,EAAUpC,YAAc,YAEjB,IAAMsC,EAAkB3C,IAAOC,IAAV,wKAMN,gBAAG2C,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGtBD,EAAgBtC,YAAc,kBAEvB,IAAMwC,EAA4B7C,IAAOC,IAAV,oIAQtC4C,EAA0BxC,YAAc,4BAEjC,IAAMyC,EAAgB9C,IAAO+C,KAAV,mEAK1BD,EAAczC,YAAc,gBAErB,IAAM2C,EAAiBhD,IAAO+C,KAAV,iEAK3BC,EAAe3C,YAAc,iB,WCpDdC,gBACb,MALyB,SAAA2C,GAAQ,MAAK,CACtCC,QAAS,SAAAjC,GAAI,OAAIgC,EAASC,YAAQjC,QAGrBX,EArBe,SAAC,GAAuB,IAArBW,EAAoB,EAApBA,KAAMiC,EAAc,EAAdA,QAC7BC,EAA0BlC,EAA1BkC,KAAMC,EAAoBnC,EAApBmC,MAAOR,EAAa3B,EAAb2B,SAErB,OACE,eAACJ,EAAD,WACE,cAACG,EAAD,CAAiBU,UAAU,QAAQT,SAAUA,IAC7C,eAACC,EAAD,WACE,cAACC,EAAD,UAAgBK,IAChB,cAACH,EAAD,UAAiBI,OAEnB,cAACX,EAAD,CAAWa,QAAS,kBAAMJ,EAAQjC,IAAOsC,UAAQ,EAAjD","file":"static/js/5.6191685d.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const CollectionPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const CollectionTitle = styled.h2`\n  font-size: 38px;\n  margin: 0 auto 30px;\n`;\n\nexport const CollectionItemsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 10px;\n\n  & > div {\n    margin-bottom: 30px;\n  }\n\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 15px;\n  }\n`;\n\nCollectionItemsContainer.displayName = 'CollectionItemsContainer';\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport CollectionItem from '../../components/collection-item/collection-item.component';\n\nimport { selectCollection } from '../../redux/shop/shop.selectors';\n\nimport {\n  CollectionPageContainer,\n  CollectionTitle,\n  CollectionItemsContainer\n} from './collection.styles';\n\nexport const CollectionPage = ({ collection }) => {\n  const { title, items } = collection;\n  return (\n    <CollectionPageContainer>\n      <CollectionTitle>{title}</CollectionTitle>\n      <CollectionItemsContainer>\n        {items.map(item => (\n          <CollectionItem key={item.id} item={item} />\n        ))}\n      </CollectionItemsContainer>\n    </CollectionPageContainer>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionPage from './collection.component';\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: state => !selectIsCollectionsLoaded(state)\n});\n\nconst CollectionPageContainer = compose(\n  connect(mapStateToProps),\n  WithSpinner\n)(CollectionPage);\n\nexport default CollectionPageContainer;\n","import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  shop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  collections =>\n    collections ? Object.keys(collections).map(key => collections[key]) : []\n);\n\nexport const selectCollection = collectionUrlParam =>\n  createSelector(\n    [selectCollections],\n    collections => (collections ? collections[collectionUrlParam] : null)\n  );\n\nexport const selectIsCollectionFetching = createSelector(\n  [selectShop],\n  shop => shop.isFetching\n);\n\nexport const selectIsCollectionsLoaded = createSelector(\n  [selectShop],\n  shop => !!shop.collections\n);\n","import React from 'react';\n\nimport Spinner from '../spinner/spinner.component';\n\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\n};\n\nexport default WithSpinner;\n","import styled from 'styled-components';\nimport CustomButton from '../custom-button/custom-button.component';\n\nexport const CollectionItemContainer = styled.div`\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n\n  &:hover {\n    .image {\n      opacity: 0.8;\n    }\n\n    button {\n      opacity: 0.85;\n      display: flex;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 40vw;\n\n    &:hover {\n      .image {\n        opacity: unset;\n      }\n\n      button {\n        opacity: unset;\n      }\n    }\n  }\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 80%;\n  opacity: 0.7;\n  position: absolute;\n  top: 255px;\n  display: none;\n\n  @media screen and (max-width: 800px) {\n    display: block;\n    opacity: 0.9;\n    min-width: unset;\n    padding: 0 10px;\n  }\n`;\n\nAddButton.displayName = 'AddButton';\n\nexport const BackgroundImage = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nBackgroundImage.displayName = 'BackgroundImage';\n\nexport const CollectionFooterContainer = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nCollectionFooterContainer.displayName = 'CollectionFooterContainer';\n\nexport const NameContainer = styled.span`\n  width: 90%;\n  margin-bottom: 15px;\n`;\n\nNameContainer.displayName = 'NameContainer';\n\nexport const PriceContainer = styled.span`\n  width: 10%;\n  text-align: right;\n`;\n\nPriceContainer.displayName = 'PriceContainer';\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { addItem } from '../../redux/cart/cart.actions';\n\nimport {\n  CollectionItemContainer,\n  CollectionFooterContainer,\n  AddButton,\n  BackgroundImage,\n  NameContainer,\n  PriceContainer\n} from './collection-item.styles';\n\nexport const CollectionItem = ({ item, addItem }) => {\n  const { name, price, imageUrl } = item;\n\n  return (\n    <CollectionItemContainer>\n      <BackgroundImage className='image' imageUrl={imageUrl} />\n      <CollectionFooterContainer>\n        <NameContainer>{name}</NameContainer>\n        <PriceContainer>{price}</PriceContainer>\n      </CollectionFooterContainer>\n      <AddButton onClick={() => addItem(item)} inverted>\n        Add to cart\n      </AddButton>\n    </CollectionItemContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CollectionItem);\n"],"sourceRoot":""}