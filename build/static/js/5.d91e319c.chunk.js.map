{"version":3,"sources":["pages/collection/collection.styles.jsx","pages/collection/collection.component.jsx","pages/collection/collection.container.jsx","redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx"],"names":["CollectionPageContainer","styled","div","CollectionTitle","h2","CollectionItemsContainer","displayName","connect","state","ownProps","collection","selectCollection","match","params","collectionId","title","items","map","item","id","mapStateToProps","createStructuredSelector","isLoading","selectIsCollectionsLoaded","compose","WithSpinner","CollectionPage","selectShop","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","key","collectionUrlParam","selectIsCollectionFetching","isFetching","WrappedComponent","otherProps","CollectionItemContainer","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","dispatch","addItem","name","price","className","onClick","inverted"],"mappings":"0LAEaA,EAA0BC,IAAOC,IAAV,iGAMvBC,EAAkBF,IAAOG,GAAV,wEAKfC,EAA2BJ,IAAOC,IAAV,qQAerCG,EAAyBC,YAAc,2B,WCGxBC,eAJS,SAACC,EAAOC,GAAR,MAAsB,CAC5CC,WAAYC,YAAiBF,EAASG,MAAMC,OAAOC,aAAvCH,CAAqDH,MAGpDD,EAlBe,SAAC,GAAoB,IAAlBG,EAAiB,EAAjBA,WACvBK,EAAiBL,EAAjBK,MAAOC,EAAUN,EAAVM,MACf,OACE,eAAChB,EAAD,WACE,cAACG,EAAD,UAAkBY,IAClB,cAACV,EAAD,UACGW,EAAMC,KAAI,SAAAC,GAAI,OACb,cAAC,IAAD,CAA8BA,KAAMA,GAAfA,EAAKC,eCZ9BC,EAAkBC,YAAyB,CAC/CC,UAAW,SAAAd,GAAK,OAAKe,YAA0Bf,MAG3CR,EAA0BwB,YAC9BjB,YAAQa,GACRK,IAF8BD,CAG9BE,GAEa1B,a,gCCjBf,oJAEM2B,EAAa,SAAAnB,GAAK,OAAIA,EAAMoB,MAErBC,EAAoBC,YAC/B,CAACH,IACD,SAAAC,GAAI,OAAIA,EAAKG,eAGFC,EAA8BF,YACzC,CAACD,IACD,SAAAE,GAAW,OACTA,EAAcE,OAAOC,KAAKH,GAAad,KAAI,SAAAkB,GAAG,OAAIJ,EAAYI,MAAQ,MAG7DxB,EAAmB,SAAAyB,GAAkB,OAChDN,YACE,CAACD,IACD,SAAAE,GAAW,OAAKA,EAAcA,EAAYK,GAAsB,SAGvDC,EAA6BP,YACxC,CAACH,IACD,SAAAC,GAAI,OAAIA,EAAKU,cAGFf,EAA4BO,YACvC,CAACH,IACD,SAAAC,GAAI,QAAMA,EAAKG,gB,yECpBFN,IAJK,SAAAc,GAAgB,OAAI,YAAmC,IAAhCjB,EAA+B,EAA/BA,UAAckB,EAAiB,6BACxE,OAAOlB,EAAY,cAAC,IAAD,IAAc,cAACiB,EAAD,eAAsBC,O,6FCF5CC,EAA0BxC,IAAOC,IAAV,4dAkCvBwC,EAAYzC,YAAO0C,IAAP1C,CAAH,0PAetByC,EAAUpC,YAAc,YAEjB,IAAMsC,EAAkB3C,IAAOC,IAAV,wKAMN,gBAAG2C,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGtBD,EAAgBtC,YAAc,kBAEvB,IAAMwC,EAA4B7C,IAAOC,IAAV,oIAQtC4C,EAA0BxC,YAAc,4BAEjC,IAAMyC,EAAgB9C,IAAO+C,KAAV,mEAK1BD,EAAczC,YAAc,gBAErB,IAAM2C,EAAiBhD,IAAO+C,KAAV,iEAK3BC,EAAe3C,YAAc,iB,WCpDdC,gBACb,MALyB,SAAA2C,GAAQ,MAAK,CACtCC,QAAS,SAAAjC,GAAI,OAAIgC,EAASC,YAAQjC,QAGrBX,EArBe,SAAC,GAAuB,IAArBW,EAAoB,EAApBA,KAAMiC,EAAc,EAAdA,QAC7BC,EAA0BlC,EAA1BkC,KAAMC,EAAoBnC,EAApBmC,MAAOR,EAAa3B,EAAb2B,SAErB,OACE,eAACJ,EAAD,WACE,cAACG,EAAD,CAAiBU,UAAU,QAAQT,SAAUA,IAC7C,eAACC,EAAD,WACE,cAACC,EAAD,UAAgBK,IAChB,cAACH,EAAD,UAAiBI,OAEnB,cAACX,EAAD,CAAWa,QAAS,kBAAMJ,EAAQjC,IAAOsC,UAAQ,EAAjD","file":"static/js/5.d91e319c.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CollectionPageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CollectionTitle = styled.h2`\r\n  font-size: 38px;\r\n  margin: 0 auto 30px;\r\n`;\r\n\r\nexport const CollectionItemsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  grid-gap: 10px;\r\n\r\n  & > div {\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 15px;\r\n  }\r\n`;\r\n\r\nCollectionItemsContainer.displayName = 'CollectionItemsContainer';\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CollectionItem from '../../components/collection-item/collection-item.component';\r\n\r\nimport { selectCollection } from '../../redux/shop/shop.selectors';\r\n\r\nimport {\r\n  CollectionPageContainer,\r\n  CollectionTitle,\r\n  CollectionItemsContainer\r\n} from './collection.styles';\r\n\r\nexport const CollectionPage = ({ collection }) => {\r\n  const { title, items } = collection;\r\n  return (\r\n    <CollectionPageContainer>\r\n      <CollectionTitle>{title}</CollectionTitle>\r\n      <CollectionItemsContainer>\r\n        {items.map(item => (\r\n          <CollectionItem key={item.id} item={item} />\r\n        ))}\r\n      </CollectionItemsContainer>\r\n    </CollectionPageContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionPage);\r\n","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport CollectionPage from './collection.component';\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoading: state => !selectIsCollectionsLoaded(state)\r\n});\r\n\r\nconst CollectionPageContainer = compose(\r\n  connect(mapStateToProps),\r\n  WithSpinner\r\n)(CollectionPage);\r\n\r\nexport default CollectionPageContainer;\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n  [selectShop],\r\n  shop => shop.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n  [selectCollections],\r\n  collections =>\r\n    collections ? Object.keys(collections).map(key => collections[key]) : []\r\n);\r\n\r\nexport const selectCollection = collectionUrlParam =>\r\n  createSelector(\r\n    [selectCollections],\r\n    collections => (collections ? collections[collectionUrlParam] : null)\r\n  );\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n  [selectShop],\r\n  shop => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n  [selectShop],\r\n  shop => !!shop.collections\r\n);\r\n","import React from 'react';\r\n\r\nimport Spinner from '../spinner/spinner.component';\r\n\r\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\r\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\r\n};\r\n\r\nexport default WithSpinner;\r\n","import styled from 'styled-components';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n  width: 22vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 350px;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    .image {\r\n      opacity: 0.8;\r\n    }\r\n\r\n    button {\r\n      opacity: 0.85;\r\n      display: flex;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 40vw;\r\n\r\n    &:hover {\r\n      .image {\r\n        opacity: unset;\r\n      }\r\n\r\n      button {\r\n        opacity: unset;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const AddButton = styled(CustomButton)`\r\n  width: 80%;\r\n  opacity: 0.7;\r\n  position: absolute;\r\n  top: 255px;\r\n  display: none;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    display: block;\r\n    opacity: 0.9;\r\n    min-width: unset;\r\n    padding: 0 10px;\r\n  }\r\n`;\r\n\r\nAddButton.displayName = 'AddButton';\r\n\r\nexport const BackgroundImage = styled.div`\r\n  width: 100%;\r\n  height: 95%;\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin-bottom: 5px;\r\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\r\n`;\r\n\r\nBackgroundImage.displayName = 'BackgroundImage';\r\n\r\nexport const CollectionFooterContainer = styled.div`\r\n  width: 100%;\r\n  height: 5%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 18px;\r\n`;\r\n\r\nCollectionFooterContainer.displayName = 'CollectionFooterContainer';\r\n\r\nexport const NameContainer = styled.span`\r\n  width: 90%;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nNameContainer.displayName = 'NameContainer';\r\n\r\nexport const PriceContainer = styled.span`\r\n  width: 10%;\r\n  text-align: right;\r\n`;\r\n\r\nPriceContainer.displayName = 'PriceContainer';\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addItem } from '../../redux/cart/cart.actions';\r\n\r\nimport {\r\n  CollectionItemContainer,\r\n  CollectionFooterContainer,\r\n  AddButton,\r\n  BackgroundImage,\r\n  NameContainer,\r\n  PriceContainer\r\n} from './collection-item.styles';\r\n\r\nexport const CollectionItem = ({ item, addItem }) => {\r\n  const { name, price, imageUrl } = item;\r\n\r\n  return (\r\n    <CollectionItemContainer>\r\n      <BackgroundImage className='image' imageUrl={imageUrl} />\r\n      <CollectionFooterContainer>\r\n        <NameContainer>{name}</NameContainer>\r\n        <PriceContainer>{price}</PriceContainer>\r\n      </CollectionFooterContainer>\r\n      <AddButton onClick={() => addItem(item)} inverted>\r\n        Add to cart\r\n      </AddButton>\r\n    </CollectionItemContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addItem: item => dispatch(addItem(item))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(CollectionItem);\r\n"],"sourceRoot":""}