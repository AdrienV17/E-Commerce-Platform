{"version":3,"sources":["pages/shop/shop.styles.jsx","pages/shop/shop.component.jsx"],"names":["ShopPageContainer","styled","div","CollectionsOverviewContainer","lazy","CollectionPageContainer","ShopPage","fetchCollectionsStart","match","useEffect","fallback","exact","path","component","connect","dispatch"],"mappings":"uMAEaA,E,MAAoBC,EAAOC,IAAV,4C,OCQxBC,EAA+BC,gBAAK,kBACxC,iCAGIC,EAA0BD,gBAAK,kBACnC,iCAGWE,EAAW,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,sBAAuBC,EAAY,EAAZA,MAKhD,OAJAC,qBAAU,WACRF,MACC,CAACA,IAGF,cAACP,EAAD,UACE,eAAC,WAAD,CAAUU,SAAU,cAAC,IAAD,IAApB,UACE,cAAC,IAAD,CACEC,OAAK,EACLC,KAAI,UAAKJ,EAAMI,MACfC,UAAWV,IAEb,cAAC,IAAD,CACES,KAAI,UAAKJ,EAAMI,KAAX,kBACJC,UAAWR,UAWNS,sBACb,MALyB,SAAAC,GAAQ,MAAK,CACtCR,sBAAuB,kBAAMQ,EAASR,mBAGzBO,CAGbR","file":"static/js/8.47406e7e.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const ShopPageContainer = styled.div`\n  width: 100%;\n`;\n","import React, { useEffect, lazy, Suspense } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\n\nimport Spinner from '../../components/spinner/spinner.component';\n\nimport { ShopPageContainer } from './shop.styles';\n\nconst CollectionsOverviewContainer = lazy(() =>\n  import('../../components/collections-overview/collections-overview.container')\n);\n\nconst CollectionPageContainer = lazy(() =>\n  import('../collection/collection.container')\n);\n\nexport const ShopPage = ({ fetchCollectionsStart, match }) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]);\n\n  return (\n    <ShopPageContainer>\n      <Suspense fallback={<Spinner />}>\n        <Route\n          exact\n          path={`${match.path}`}\n          component={CollectionsOverviewContainer}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionPageContainer}\n        />\n      </Suspense>\n    </ShopPageContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ShopPage);\n"],"sourceRoot":""}